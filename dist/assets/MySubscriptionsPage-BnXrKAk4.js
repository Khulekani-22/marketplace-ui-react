import{f as F,a as b,c as d,k,j as s,M as E,l as R}from"./index-DgAHpWmH.js";import{B as L}from"./Breadcrumb-Dt1H-3v0.js";import{r as a}from"./vendor-DW3XjTa1.js";import"./firebase-ARhtPVQA.js";import"./utils-B2rxisVD.js";function D(){const[h,y]=a.useState(!0),[S,g]=a.useState([]),[v,x]=a.useState(""),[j,N]=a.useState({}),[w,I]=a.useState(!1),A=a.useMemo(()=>sessionStorage.getItem("tenantId")||"vendor",[]),{appData:m}=F(),u=a.useMemo(()=>Array.isArray(m?.services)?m.services:[],[m]),U=a.useCallback(async e=>{if(!e.size)return[];const n=Math.max(50,Math.min(500,e.size*3));try{const{data:t}=await b.get("/api/data/services",{params:{page:1,pageSize:n},suppressToast:!0,suppressErrorLog:!0}),r=(Array.isArray(t?.items)?t.items:[]).filter(o=>e.has(String(o?.id??""))),c=new Set(r.map(o=>String(o?.id??"")));if(c.size!==e.size&&u.length){const o=[...e].filter(l=>!c.has(l));if(o.length){const l=u.filter(f=>o.includes(String(f?.id??"")));if(l.length)return[...r,...l]}}return r}catch(t){if(console.warn("Failed to fetch services from API; using appData fallback",t),u.length)return u.filter(i=>e.has(String(i?.id??"")));throw t}},[u]),M=a.useCallback(async()=>{try{console.log("🔗 Testing API connection..."),console.log("🔗 Current API base URL:",b.defaults.baseURL);const e=await b.get("/api/health");if(console.log("✅ API health check passed:",e.data),d.currentUser){console.log("🔐 Testing authenticated endpoint...");const n=await b.get("/api/subscriptions/my");console.log("✅ Subscriptions endpoint test:",n.data)}}catch(e){console.error("❌ API connection test failed:",e),console.error("❌ Error details:",e?.response?.data)}},[]);a.useEffect(()=>{M()},[M]);const p=a.useCallback(async(e={})=>{const{silent:n,signal:t}=e;n?I(!0):y(!0),x("");try{if(!d.currentUser){console.log("🔐 No authenticated user found"),t?.aborted||g([]);return}console.log("📡 Fetching subscriptions for user:",d.currentUser.email);const i=await k();console.log("📋 Raw subscriptions from API:",i);const r=new Set(i.filter(o=>(o.type||"service")==="service"&&o.serviceId!=null).map(o=>String(o.serviceId)));console.log("🔍 Service IDs from subscriptions:",Array.from(r));const c=await U(r);console.log("✅ Matched services:",c.length,c.map(o=>({id:o.id,title:o.title}))),t?.aborted||g(c)}catch(i){console.error("❌ Failed to load subscriptions:",i),t?.aborted||x(i?.message||"Failed to load subscriptions")}finally{t?.aborted||(n?I(!1):y(!1))}},[U]);a.useEffect(()=>{const e=new AbortController;return p({silent:!1,signal:e.signal}),()=>{e.abort()}},[p,A]);async function C(e){const n=String(e);console.log("🔄 Starting unsubscribe process for service:",n),console.log("🔄 Current user:",d.currentUser?.email),console.log("🔄 Current tenant:",A),N(t=>({...t,[n]:!0}));try{console.log("🔍 Fetching current subscriptions before unsubscribe...");const t=await k();console.log("📋 Current subscriptions:",t);const i=t.find(r=>String(r.serviceId)===n);if(console.log("🎯 Target subscription to cancel:",i),!i){console.log("⚠️ No subscription found in cache for service:",n),g(r=>r.filter(c=>String(c.id)!==n)),alert(`✅ Service ${n} removed from your subscriptions (was already cancelled)`);return}console.log("📡 Calling unsubscribeFromService API...");try{const r=await R(n);console.log("✅ Unsubscribe API success:",r),alert(`✅ Successfully unsubscribed from service ${n}`)}catch(r){if(r?.response?.status===404)console.log("⚠️ Backend says subscription not found (404) - treating as already cancelled"),alert(`✅ Service ${n} removed from your subscriptions (was already cancelled on server)`);else throw r}g(r=>{const c=r.filter(o=>String(o.id)!==n);return console.log("📝 Updated items count:",c.length),c}),console.log("�️ Clearing subscription from local cache...");try{const r=`sl_subscriptions_cache_v1:${d.currentUser?.uid||d.currentUser?.email}`,c=localStorage.getItem(r);if(c){const l=JSON.parse(c).filter(f=>String(f.serviceId)!==n);localStorage.setItem(r,JSON.stringify(l)),console.log("🗑️ Removed subscription from cache, remaining:",l.length)}}catch(r){console.log("⚠️ Failed to update cache:",r)}console.log("✅ Unsubscribe completed - skipping refresh to prevent reappearing")}catch(t){console.error("❌ Failed to unsubscribe:",t),console.error("❌ Error response:",t?.response),console.error("❌ Error data:",t?.response?.data),console.error("❌ Error status:",t?.response?.status);const i=t?.response?.data?.message||t?.message||"Failed to unsubscribe";alert(`❌ Unsubscribe failed for service ${n}: ${i}`)}finally{N(t=>({...t,[n]:!1})),console.log("🏁 Unsubscribe process completed for service:",n)}}return s.jsxs(E,{children:[s.jsx(L,{title:"My Subscriptions"}),s.jsxs("div",{className:"card",children:[s.jsxs("div",{className:"card-header border-bottom py-16 px-24 d-flex align-items-center justify-content-between gap-3 flex-wrap",children:[s.jsx("h6",{className:"mb-0",children:"Active Subscriptions"}),s.jsx("button",{type:"button",className:"btn btn-outline-secondary btn-sm",onClick:()=>p({silent:!0}),disabled:h||w,children:w?"Refreshing…":"Refresh"})]}),s.jsxs("div",{className:"card-body",children:[v&&s.jsx("div",{className:"alert alert-danger",children:v}),h?s.jsx("div",{children:"Loading…"}):s.jsxs("div",{className:"row g-3",children:[S.length===0&&s.jsx("div",{className:"col-12 text-secondary",children:"No subscriptions yet."}),S.map(e=>s.jsx("div",{className:"col-12 col-md-6 col-lg-4",children:s.jsxs("div",{className:"card h-100",children:[s.jsx("img",{src:e.imageUrl||"/assets/images/services/placeholder.png",className:"card-img-top",alt:e.title||"Listing",style:{maxHeight:160,objectFit:"cover"}}),s.jsxs("div",{className:"card-body d-flex flex-column",children:[s.jsxs("div",{className:"d-flex justify-content-between align-items-start",children:[s.jsx("h6",{className:"card-title mb-1",children:e.title||"Listing"}),s.jsx("button",{type:"button",className:"btn btn-sm btn-outline-secondary",title:"Notifications (soon)",disabled:!0,children:s.jsx("i",{className:"ri-notification-3-line"})})]}),s.jsxs("div",{className:"text-muted small mb-2",children:[e.category||"General"," · ",e.vendor||""]}),e.description&&s.jsxs("p",{className:"flex-grow-1 text-secondary small",children:[e.description.slice(0,140),e.description.length>140?"…":""]}),s.jsxs("div",{className:"d-flex justify-content-between align-items-center mt-auto",children:[s.jsxs("strong",{children:["R ",Number(e.price||0).toLocaleString()]}),s.jsxs("div",{className:"d-flex gap-2",children:[s.jsxs("span",{className:"badge bg-neutral-200 text-neutral-900",children:["★ ",Number(e.rating||0).toFixed(1)]}),s.jsx("button",{className:"btn btn-sm btn-outline-danger",onClick:()=>C(e.id),disabled:!!j[String(e.id)],children:j[String(e.id)]?"Removing…":"Unsubscribe"})]})]})]})]})},String(e.id)))]})]})]})]})}export{D as default};
